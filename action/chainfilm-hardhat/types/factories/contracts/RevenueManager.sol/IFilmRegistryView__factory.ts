/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFilmRegistryView,
  IFilmRegistryViewInterface,
} from "../../../contracts/RevenueManager.sol/IFilmRegistryView";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
    ],
    name: "getSplit",
    outputs: [
      {
        internalType: "address[]",
        name: "collaborators",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "sharesBps",
        type: "uint32[]",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFilmRegistryView__factory {
  static readonly abi = _abi;
  static createInterface(): IFilmRegistryViewInterface {
    return new Interface(_abi) as IFilmRegistryViewInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFilmRegistryView {
    return new Contract(address, _abi, runner) as unknown as IFilmRegistryView;
  }
}
