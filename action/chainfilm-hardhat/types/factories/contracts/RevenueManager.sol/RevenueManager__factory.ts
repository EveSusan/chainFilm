/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RevenueManager,
  RevenueManagerInterface,
} from "../../../contracts/RevenueManager.sol/RevenueManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWei",
        type: "uint256",
      },
    ],
    name: "Distributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWei",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountWei",
        type: "uint256",
      },
    ],
    name: "distributeRevenue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBalanceHandle",
    outputs: [
      {
        internalType: "euint128",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IFilmRegistryView",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountWei",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f52380380610f5283398101604081905261002f916101cf565b6101aa6100ce604080516080810182526000808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b600080546001600160a01b0319166001600160a01b03929092169190911790556101ff565b6000602082840312156101e157600080fd5b81516001600160a01b03811681146101f857600080fd5b9392505050565b610d448061020e6000396000f3fe6080604052600436106100595760003560e01c8063153ab9df14610065578063441a3e70146100ae5780634ae699ef146100d05780634b0d8c27146100e35780637b10399914610103578063da1f12ab1461013b57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061009b6100803660046109f2565b6001600160a01b031660009081526003602052604090205490565b6040519081526020015b60405180910390f35b3480156100ba57600080fd5b506100ce6100c9366004610a0f565b610150565b005b6100ce6100de366004610a0f565b6102fd565b3480156100ef57600080fd5b5061009b6100fe366004610a31565b610717565b34801561010f57600080fd5b50600054610123906001600160a01b031681565b6040516001600160a01b0390911681526020016100a5565b34801561014757600080fd5b5061271161009b565b600081116101905760405162461bcd60e51b81526020600482015260086024820152670616d6f756e743d360c41b60448201526064015b60405180910390fd5b6000828152600260209081526040808320338452909152902054818110156101f35760405162461bcd60e51b8152602060048201526016602482015275696e73756666696369656e7420617661696c61626c6560501b6044820152606401610187565b6101fd8282610a77565b6000848152600260209081526040808320338452825280832093909355600390529081208054849290610231908490610a77565b9091555050604051600090339084908381818185875af1925050503d8060008114610278576040519150601f19603f3d011682016040523d82523d6000602084013e61027d565b606091505b50509050806102c05760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610187565b604051838152339085907fcf7d23a3cbe4e8b36ff82fd1b05b1b17373dc7804b4ebbd6e2356716ef2023729060200160405180910390a350505050565b80341461033c5760405162461bcd60e51b815260206004820152600d60248201526c1d985b1d59484f585b5bdd5b9d609a1b6044820152606401610187565b60008054604051630514a68160e41b815260048101859052829182916001600160a01b039091169063514a681090602401600060405180830381865afa15801561038a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103b29190810190610b8c565b925092509250806103f65760405162461bcd60e51b815260206004820152600e60248201526d199a5b1b481b9bdd08199bdd5b9960921b6044820152606401610187565b81518351148015610408575060008351115b6104415760405162461bcd60e51b815260206004820152600a6024820152696261642073706c69747360b01b6044820152606401610187565b60005b83518110156106d557600061271084838151811061046457610464610c61565b602002602001015163ffffffff168761047d9190610c77565b6104879190610c8e565b905060006001600089815260200190815260200160002060008785815181106104b2576104b2610c61565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905060006104e883610741565b90506104f48282610760565b600160008b8152602001908152602001600020600089878151811061051b5761051b610c61565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555061059f600160008b8152602001908152602001600020600089878151811061057157610571610c61565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054610799565b506000898152600160205260408120885161060f92908a90889081106105c7576105c7610c61565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205488868151811061060257610602610c61565b60200260200101516107a9565b50600089815260026020526040812088518592908a908890811061063557610635610c61565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461066c9190610cb0565b92505081905550826003600089878151811061068a5761068a610c61565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106c19190610cb0565b909155505060019093019250610444915050565b50847f97791d3ac1343e05805a2f905fa80b249c2ca58cf9fef455d4fa7ec13ce583218560405161070891815260200190565b60405180910390a25050505050565b60008281526001602090815260408083206001600160a01b03851684529091529020545b92915050565b600061073b826fffffffffffffffffffffffffffffffff1660066107bc565b600082610774576107716000610741565b92505b81610786576107836000610741565b91505b6107928383600061087d565b9392505050565b60006107a5823061094b565b5090565b60006107b5838361094b565b5090919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81526000917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906108329087908790600401610cc3565b6020604051808303816000875af1158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190610cf5565b949350505050565b60008082156108915750600160f81b610895565b5060005b60007f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700600181015460405163022f65e760e31b815260048101899052602481018890526001600160f81b0319851660448201529192506001600160a01b03169063117b2f38906064016020604051808303816000875af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190610cf5565b9695505050505050565b60007f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b50505050505050565b6001600160a01b03811681146109ef57600080fd5b50565b600060208284031215610a0457600080fd5b8135610792816109da565b60008060408385031215610a2257600080fd5b50508035926020909101359150565b60008060408385031215610a4457600080fd5b823591506020830135610a56816109da565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073b5761073b610a61565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ac957610ac9610a8a565b604052919050565b600067ffffffffffffffff821115610aeb57610aeb610a8a565b5060051b60200190565b600082601f830112610b0657600080fd5b81516020610b1b610b1683610ad1565b610aa0565b8083825260208201915060208460051b870101935086841115610b3d57600080fd5b602086015b84811015610b6c57805163ffffffff81168114610b5f5760008081fd5b8352918301918301610b42565b509695505050505050565b80518015158114610b8757600080fd5b919050565b600080600060608486031215610ba157600080fd5b835167ffffffffffffffff80821115610bb957600080fd5b818601915086601f830112610bcd57600080fd5b81516020610bdd610b1683610ad1565b82815260059290921b8401810191818101908a841115610bfc57600080fd5b948201945b83861015610c23578551610c14816109da565b82529482019490820190610c01565b91890151919750909350505080821115610c3c57600080fd5b50610c4986828701610af5565b925050610c5860408501610b77565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761073b5761073b610a61565b600082610cab57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561073b5761073b610a61565b8281526040810160548310610ce857634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600060208284031215610d0757600080fd5b505191905056fea2646970667358221220beb4f38ab65d8c50f8f8d375d2a863bb2cd82d29a692efaa372943fa65e7c01964736f6c63430008180033";

type RevenueManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevenueManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevenueManager__factory extends ContractFactory {
  constructor(...args: RevenueManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, overrides || {}) as Promise<
      RevenueManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RevenueManager__factory {
    return super.connect(runner) as RevenueManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevenueManagerInterface {
    return new Interface(_abi) as RevenueManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RevenueManager {
    return new Contract(address, _abi, runner) as unknown as RevenueManager;
  }
}
