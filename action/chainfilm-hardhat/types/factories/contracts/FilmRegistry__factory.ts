/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FilmRegistry,
  FilmRegistryInterface,
} from "../../contracts/FilmRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "FilmRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "films",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "ipfsCidMeta",
        type: "string",
      },
      {
        internalType: "euint256",
        name: "videoHashEnc",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
    ],
    name: "getSplit",
    outputs: [
      {
        internalType: "address[]",
        name: "cols",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "bps",
        type: "uint32[]",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextFilmId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "ipfsCidMeta",
        type: "string",
      },
      {
        internalType: "externalEuint256",
        name: "videoHashHandle",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "address[]",
        name: "collaborators",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "sharesBps",
        type: "uint32[]",
      },
    ],
    name: "registerFilm",
    outputs: [
      {
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018c6100b0604080516080810182526000808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b610f808061019b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063514a68101461005c57806354f6e2e21461008757806393aab8d81461009e578063da1f12ab146100c3578063ecb00656146100cb575b600080fd5b61006f61006a3660046108ea565b6100de565b60405161007e93929190610903565b60405180910390f35b61009060005481565b60405190815260200161007e565b6100b16100ac3660046108ea565b6101ee565b60405161007e969594939291906109e2565b612711610090565b6100906100d9366004610c54565b610343565b60008181526001602090815260408083206007810154600482018054845181870281018701909552808552606096879690959293600586019360ff90911692909185919083018282801561015b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161013d575b50505050509250818054806020026020016040519081016040528092919081815260200182805480156101d957602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161019c5790505b50505050509150935093509350509193909250565b6001602081905260009182526040909120805491810180546001600160a01b039093169261021b90610d35565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610d35565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050908060020180546102a990610d35565b80601f01602080910402602001604051908101604052809291908181526020018280546102d590610d35565b80156103225780601f106102f757610100808354040283529160200191610322565b820191906000526020600020905b81548152906001019060200180831161030557829003601f168201915b50505050600383015460068401546007909401549293909290915060ff1686565b600081518351148015610357575060008351115b6103955760405162461bcd60e51b815260206004820152600a6024820152696261642073706c69747360b01b60448201526064015b60405180910390fd5b6000805b83518110156103d7578381815181106103b4576103b4610d6f565b602002602001015163ffffffff16826103cd9190610d9b565b9150600101610399565b5080612710146104165760405162461bcd60e51b815260206004820152600a602482015269073756d213d31303030360b41b604482015260640161038c565b600080815461042490610dae565b9190508190559150600061046e8888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105dc92505050565b604080516101008101825233815260208082018e81528284018e905260608301859052608083018a905260a083018990524260c0840152600160e0840181905260008981529281905293909120825181546001600160a01b0319166001600160a01b039091161781559051939450909290918201906104ed9082610e18565b50604082015160028201906105029082610e18565b5060608201516003820155608082015180516105289160048401916020909101906107ce565b5060a0820151805161054491600584019160209091019061082f565b5060c0820151600682015560e0909101516007909101805460ff191691151591909117905560008381526001602052604090206003015461058590336105f3565b506000838152600160205260409020600301546105a190610606565b50604051339084907f6e58cfd5d5004babfb790d3146b39c082293f455fdf9d7f86710d6918b7ddc9990600090a35050979650505050505050565b60006105ea83836008610616565b90505b92915050565b60006105ff838361073f565b5090919050565b6000610612823061073f565b5090565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81526000917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90610690908890339089908990600401610ed8565b6020604051808303816000875af11580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d39190610f31565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec90604401600060405180830381600087803b15801561071f57600080fd5b505af1158015610733573d6000803e3d6000fd5b50505050509392505050565b60007f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b1580156107b157600080fd5b505af11580156107c5573d6000803e3d6000fd5b50505050505050565b828054828255906000526020600020908101928215610823579160200282015b8281111561082357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906107ee565b506106129291506108d5565b828054828255906000526020600020906007016008900481019282156108235791602002820160005b8382111561089c57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610858565b80156108cc5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261089c565b50506106129291505b5b8082111561061257600081556001016108d6565b6000602082840312156108fc57600080fd5b5035919050565b606080825284519082018190526000906020906080840190828801845b828110156109455781516001600160a01b031684529284019290840190600101610920565b5050508381038285015285518082528683019183019060005b8181101561098057835163ffffffff168352928401929184019160010161095e565b505085151560408601529250610994915050565b949350505050565b6000815180845260005b818110156109c2576020818501810151868301820152016109a6565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038716815260c060208201819052600090610a069083018861099c565b8281036040840152610a18818861099c565b606084019690965250506080810192909252151560a0909101529392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a7857610a78610a39565b604052919050565b600082601f830112610a9157600080fd5b813567ffffffffffffffff811115610aab57610aab610a39565b610abe601f8201601f1916602001610a4f565b818152846020838601011115610ad357600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f840112610b0257600080fd5b50813567ffffffffffffffff811115610b1a57600080fd5b602083019150836020828501011115610b3257600080fd5b9250929050565b600067ffffffffffffffff821115610b5357610b53610a39565b5060051b60200190565b600082601f830112610b6e57600080fd5b81356020610b83610b7e83610b39565b610a4f565b8083825260208201915060208460051b870101935086841115610ba557600080fd5b602086015b84811015610bd75780356001600160a01b0381168114610bca5760008081fd5b8352918301918301610baa565b509695505050505050565b600082601f830112610bf357600080fd5b81356020610c03610b7e83610b39565b8083825260208201915060208460051b870101935086841115610c2557600080fd5b602086015b84811015610bd757803563ffffffff81168114610c475760008081fd5b8352918301918301610c2a565b600080600080600080600060c0888a031215610c6f57600080fd5b873567ffffffffffffffff80821115610c8757600080fd5b610c938b838c01610a80565b985060208a0135915080821115610ca957600080fd5b610cb58b838c01610a80565b975060408a0135965060608a0135915080821115610cd257600080fd5b610cde8b838c01610af0565b909650945060808a0135915080821115610cf757600080fd5b610d038b838c01610b5d565b935060a08a0135915080821115610d1957600080fd5b50610d268a828b01610be2565b91505092959891949750929550565b600181811c90821680610d4957607f821691505b602082108103610d6957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105ed576105ed610d85565b600060018201610dc057610dc0610d85565b5060010190565b601f821115610e13576000816000526020600020601f850160051c81016020861015610df05750805b601f850160051c820191505b81811015610e0f57828155600101610dfc565b5050505b505050565b815167ffffffffffffffff811115610e3257610e32610a39565b610e4681610e408454610d35565b84610dc7565b602080601f831160018114610e7b5760008415610e635750858301515b600019600386901b1c1916600185901b178555610e0f565b600085815260208120601f198616915b82811015610eaa57888601518255948401946001909101908401610e8b565b5085821015610ec85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8481526001600160a01b0384166020820152608060408201819052600090610f029083018561099c565b905060548310610f2257634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b600060208284031215610f4357600080fd5b505191905056fea26469706673582212200f903be303fcd18f40590c7ac55f7058c515a75d6e4c7fd586c9d6d1f522443f64736f6c63430008180033";

type FilmRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FilmRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FilmRegistry__factory extends ContractFactory {
  constructor(...args: FilmRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FilmRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FilmRegistry__factory {
    return super.connect(runner) as FilmRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FilmRegistryInterface {
    return new Interface(_abi) as FilmRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FilmRegistry {
    return new Contract(address, _abi, runner) as unknown as FilmRegistry;
  }
}
