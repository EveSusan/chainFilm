/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRevenueManager,
  IRevenueManagerInterface,
} from "../../../contracts/LicenseManager.sol/IRevenueManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "filmId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountWei",
        type: "uint256",
      },
    ],
    name: "distributeRevenue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRevenueManager__factory {
  static readonly abi = _abi;
  static createInterface(): IRevenueManagerInterface {
    return new Interface(_abi) as IRevenueManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRevenueManager {
    return new Contract(address, _abi, runner) as unknown as IRevenueManager;
  }
}
